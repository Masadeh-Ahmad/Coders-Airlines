name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install .NET dependencies and OpenSSL
      - name: Install .NET dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev libcurl4-openssl-dev libicu-dev openssl

      # Step 3: Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0  # Use .NET 6.0 or .NET 7.0
          
      - name: List files in current directory
        run: ls -R
      # Step 4: Build the app
      - name: Build Application
        run: dotnet publish ./Coders-Airlines/Coders-Airlines.csproj -c Release -o ./publish

      # Step 5: Set up Docker
      - name: Login to DockerHub (Optional)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t coders-online:latest .

      # Step 7: Push Docker image to Docker Hub (Optional)
      - name: Push Docker Image to Docker Hub
        run: |
          docker tag coders-online:latest ${{ secrets.DOCKER_USERNAME }}/coders-online:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/coders-online:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout the code (needed for deployment)
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Copy files to EC2 using SCP
      - name: Copy Docker Compose to EC2
        run: |
          scp -i ${{ secrets.AWS_SSH_KEY }} ./docker-compose.yml ${{ secrets.AWS_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.AWS_USER }}/docker-compose.yml

      # Step 3: SSH into EC2 and deploy
      - name: Deploy to EC2
        run: |
          ssh -i ${{ secrets.AWS_SSH_KEY }} ${{ secrets.AWS_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          docker-compose -f /home/${{ secrets.AWS_USER }}/docker-compose.yml down
          docker-compose -f /home/${{ secrets.AWS_USER }}/docker-compose.yml up -d --build
          EOF
